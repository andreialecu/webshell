function htmlDimensionsFeature(context) {
  var postMessage = context.postMessage;
  var oldDimensions = {
    layoutViewport: { width: 0, height: 0 },
    content: { width: 0, height: 0 },
    scrollable: { width: 0, height: 0 }
  };

  function postSize() {
    var layoutViewport = {
      width: document.documentElement.clientWidth,
      height: document.documentElement.clientHeight
    };
    var content = {
      width: document.documentElement.offsetWidth,
      height: document.documentElement.offsetHeight
    };
    var scrollable = {
      width: document.documentElement.scrollWidth,
      height: document.documentElement.scrollHeight
    };
    var dimensions = {
      layoutViewport: layoutViewport,
      scrollable: scrollable,
      content: content
    };
    if (
      oldDimensions.layoutViewport.width !== dimensions.layoutViewport.width ||
      oldDimensions.layoutViewport.height !==
        dimensions.layoutViewport.height ||
      oldDimensions.content.width !== dimensions.content.width ||
      oldDimensions.content.height !== dimensions.content.height ||
      oldDimensions.scrollable.width !== dimensions.scrollable.width ||
      oldDimensions.scrollable.height !== dimensions.scrollable.height
    ) {
      postMessage(dimensions);
    }
  }
  postSize();
  window.onresize = postSize;
  // trigger when DOM changes
  var MutationObserver =
    window['MutationObserver'] || window['WebKitMutationObserver'];
  if (MutationObserver) {
    var observer = new MutationObserver(postSize);
    observer.observe(document, {
      subtree: true,
      attributes: true
    });
  } else {
    // That is a last resort fallback for older browsers
    context.warn(
      "This browser doesn't support MutationObserver. Falling back to a timeout."
    );
    setTimeout(postSize, 1000);
  }
}
