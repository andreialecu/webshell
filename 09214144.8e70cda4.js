(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),h=r,d=p["".concat(o,".").concat(h)]||p[h]||u[h]||i;return n?a.a.createElement(d,c(c({ref:t},s),{},{components:n})):a.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},58:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),i=(n(0),n(110)),o={id:"autoheightstate",title:"Interface: AutoheightState",sidebar_label:"AutoheightState",hide_title:!0},c={unversionedId:"api/interfaces/autoheightstate",id:"api/interfaces/autoheightstate",isDocsHomePage:!1,title:"Interface: AutoheightState",description:"Interface: AutoheightState&60;S>",source:"@site/docs/api/interfaces/autoheightstate.md",slug:"/api/interfaces/autoheightstate",permalink:"/webshell/docs/api/interfaces/autoheightstate",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/interfaces/autoheightstate.md",version:"current",sidebar_label:"AutoheightState",sidebar:"someSidebar",previous:{title:"Interface: AutoheightParams",permalink:"/webshell/docs/api/interfaces/autoheightparams"},next:{title:"Interface: CSSBox",permalink:"/webshell/docs/api/interfaces/cssbox"}},l=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"autoheightWebshellProps",id:"autoheightwebshellprops",children:[]},{value:"contentSize",id:"contentsize",children:[]},{value:"resizeImplementation",id:"resizeimplementation",children:[]},{value:"syncState",id:"syncstate",children:[]}]}],s={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"interface-autoheightstates"},"Interface: AutoheightState","<",Object(i.b)("strong",{parentName:"h1"},"S"),">"),Object(i.b)("p",null,"The state returned by ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/webshell/docs/api/index#useautoheight"}),"useAutoheight")," hook."),Object(i.b)("h2",{id:"type-parameters"},"Type parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"S")),Object(i.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"AutoheightState"))),Object(i.b)("h2",{id:"properties"},"Properties"),Object(i.b)("h3",{id:"autoheightwebshellprops"},"autoheightWebshellProps"),Object(i.b)("p",null,"\u2022  ",Object(i.b)("strong",{parentName:"p"},"autoheightWebshellProps"),": Pick","<","S, ",'"',"webshellDebug",'"'," ","|"," ",'"',"onDOMHTMLDimensions",'"'," ","|"," ",'"',"style",'"'," ","|"," ",'"',"scalesPageToFit",'"'," ","|"," ",'"',"showsVerticalScrollIndicator",'"'," ","|"," ",'"',"disableScrollViewPanResponder",'"',"> & Partial","<","S>"),Object(i.b)("p",null,'The props to inject into webshell in order to support "autoheight"\nbehavior.'),Object(i.b)("hr",null),Object(i.b)("h3",{id:"contentsize"},"contentSize"),Object(i.b)("p",null,"\u2022  ",Object(i.b)("strong",{parentName:"p"},"contentSize"),": Partial","<",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/webshell/docs/api/interfaces/rectsize"}),"RectSize"),">"),Object(i.b)("p",null,"An object describing the content size. When the size is not yet known,\nthis object fields will be undefined."),Object(i.b)("hr",null),Object(i.b)("h3",{id:"resizeimplementation"},"resizeImplementation"),Object(i.b)("p",null,"\u2022  ",Object(i.b)("strong",{parentName:"p"},"resizeImplementation"),": ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/webshell/docs/api/index#htmldimensionsimplementation"}),"HTMLDimensionsImplementation")," ","|"," null"),Object(i.b)("p",null,"The implementation used to generate resize events."),Object(i.b)("hr",null),Object(i.b)("h3",{id:"syncstate"},"syncState"),Object(i.b)("p",null,"\u2022  ",Object(i.b)("strong",{parentName:"p"},"syncState"),": ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/webshell/docs/api/index#autoheightsyncstate"}),"AutoheightSyncState")),Object(i.b)("p",null,"The state of synchronization between viewport and content size:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'init: the initial, "onMount" state;'),Object(i.b)("li",{parentName:"ul"},"syncing: the content size is being determined;"),Object(i.b)("li",{parentName:"ul"},"synced: the viewport size has been adjusted to content size.")))}b.isMDXComponent=!0}}]);